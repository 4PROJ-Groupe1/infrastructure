---
- name: "Installation des paquets"
  package:
     name: "{{ item }}"
     state: "present"
  with_items:
    - "htop"
    - "apt-transport-https"
    - "ca-certificates"
    - "curl"
    - "gnupg-agent"
    - "software-properties-common"

- name: "Ajout de la clé de signature apt pour docker"
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: "Ajout du depot pour la version stable"
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present

- name: "Installation de docker et ses dépendances"
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce 
    - docker-ce-cli 
    - containerd.io

- name: "Ajout de les utilisateurs dans le groupe docker"
  user:
    name: "{{ item }}"
    group: docker
  with_items:
    - max
    - maxence
    - paul
    - gaetan

- name: "Ajout des utilisateurs dans le sudo"
  lineinfile:
    dest: /etc/sudoers
    line: '{{ item }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  with_items:
    - max
    - maxence
    - paul
    - gaetan

- name: "Création des dossiers kubernetes"
  file:
    path: "{{ item }}"
    state: directory
    owner: "max"
    group: "max"
    mode: u=rwx,g=rwx,o=rwx
    recurse: yes
  with_items:
    - /home/max/kubernetes
    - /home/max/data

- name: "Suppresion de la ligne swap dans /etc/fstab"
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: "Désactiver la swap"
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: "Ajout de la clé signé apt pour K8S"
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: "Ajoute repository K8S"
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: "Installation binaires Kubernetes"
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet 
      - kubeadm 
      - kubectl

- name: "Initialisation du cluster K8S"
  command: sudo kubeadm init --pod-network-cidr=10.244.0.0/16
  when: ansible_hostname == '4PROJ-UBU18-KUBE1'

- name: "Copie du token K8S"
  command: sudo kubeadm token create --print-join-command
  register: join_command
  become: true
  when: ansible_hostname == '4PROJ-UBU18-KUBE1'

- name: "Initialisation du cluster K8S"
  command: sudo {{ join_command.stdout }}
  #when: ansible_hostname in ['4PROJ-UBU18-KUBE2', '4PROJ-UBU18-KUBE3']
  when: ansible_hostname = "4PROJ-UBU18-KUBE2" or ansible_hostname = "4PROJ-UBU18-KUBE3"
  
- name: "Mise en place de kubeconfig"
  command: "{{ item }}"
  with_items:
   - mkdir -p /home/max/.kube
   - cp -i /etc/kubernetes/admin.conf /home/max/.kube/config
   - chown max:max /home/max/.kube/config
  when: ansible_hostname == '4PROJ-UBU18-KUBE1'

- name: "Changement état de NotReady en Ready"
  shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  when: ansible_hostname == '4PROJ-UBU18-KUBE1' 

- name: "Redémarrage de kubelet"
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted